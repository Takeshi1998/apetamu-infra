version: 0.2

env:
  variables:
    DOCKER_BUILDKIT: "1"

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin 099994727094.dkr.ecr.ap-northeast-1.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/nginx
      - FRONTEND_URI=${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com/frontend
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build --target frontend --cache-from $FRONTEND_URI:frontend --build-arg BUILDKIT_INLINE_CACHE=1 -t $FRONTEND_URI:frontend -f ./prod/nginx/Dockerfile .
      - docker build --cache-from $REPOSITORY_URI:latest --cache-from $FRONTEND_URI:frontend --build-arg BUILDKIT_INLINE_CACHE=1 -t $REPOSITORY_URI:latest -f ./prod/nginx/Dockerfile .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker tag $FRONTEND_URI:frontend $FRONTEND_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $FRONTEND_URI:frontend
      - docker push $FRONTEND_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo $REPOSITORY_URI:$IMAGE_TAG
      - printf '{"name":"nginx","ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files: imageDetail.json
